@page "/groups"
@using FlashcardsBlazorUI.Models
@using FlashcardsBlazorUI.Services
@inject ApiService ApiService
@inject NavigationManager Navigation

<PageTitle>Группы карточек</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h3>Мои группы карточек</h3>
    <button class="btn btn-success" @onclick="CreateNewGroup">
        <span class="bi bi-plus-circle"></span> Создать группу
    </button>
</div>

@if (isLoading)
{
    <p><em>Загружаю группы...</em></p>
}
else if (groups == null || !groups.Any())
{
    <div class="alert alert-info text-center">
        <h5>У вас пока нет групп карточек</h5>
        <p>Создайте первую группу для изучения карточек</p>
    </div>
}
else
{
    <div id="groups-container" class="row">
        @foreach (var group in groups)
        {
            <div class="col-md-4 mb-3">
                <div class="card group-card" data-group-id="@group.Id" style="cursor: move;">
                    <div class="card-body">
                        <h5 class="card-title">@group.GroupName</h5>
                        <p class="card-text">
                            <small class="text-muted">Создана: @group.CreatedAt.ToString("dd.MM.yyyy")</small>
                        </p>
                        <span class="badge" style="background-color:@GetColorCode(group.GroupColor)">
                            @group.GroupColor
                        </span>
                        <br /><br />
                        <button class="btn btn-primary btn-sm" @onclick="() => ViewCards(group.Id)">
                            Открыть карточки
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@if (showCreateForm)
{
    <FlashcardsBlazorUI.Components.Forms.CreateGroupForm
        OnCancel="() => showCreateForm = false"
        OnGroupCreated="OnGroupCreated" />
}

<!-- Корзина -->
<div class="position-fixed trash-zone" style="bottom:30px; right:30px; z-index:1000; width:120px; height:120px;">
    <div class="card h-100 border-danger text-center" style="border-width:3px; border-style:dashed; background-color:rgba(255,255,255,0.95);">
        <div class="card-body d-flex flex-column align-items-center justify-content-center text-danger">
            <i class="bi bi-trash" style="font-size:32px; margin-bottom:5px;"></i>
            <small>Удалить</small>
        </div>
    </div>
</div>

<!-- Компонент запускает JS инициализацию -->
<DragDropInitializer />

@code {
    private List<Group>? groups;
    private bool isLoading = true;
    private bool showCreateForm = false;
    private bool _initializedOnce = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initializedOnce)
        {
            _initializedOnce = true;

            try
            {
                await ApiService.InitializeAsync();
                await LoadGroups();
            }
            catch (UnauthorizedAccessException)
            {
                Navigation.NavigateTo("/login");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка загрузки групп: {ex.Message}");
            }

            StateHasChanged();
        }
    }

    private async Task LoadGroups()
    {
        isLoading = true;
        try
        {
            groups = await ApiService.GetGroupsAsync();
        }
        finally
        {
            isLoading = false;
        }
    }

    private void CreateNewGroup() => showCreateForm = true;

    private async Task OnGroupCreated()
    {
        showCreateForm = false;
        await LoadGroups();
        Navigation.NavigateTo("/groups");
    }

    private void ViewCards(Guid groupId) =>
        Navigation.NavigateTo($"/groups/{groupId}/cards");

    private string GetColorCode(string colorName) => colorName.ToLower() switch
    {
        "red" => "#dc3545",
        "green" => "#28a745",
        "yellow" => "#ffc107",
        "orange" => "#fd7e14",
        "purple" => "#6f42c1",
        "pink" => "#e83e8c",
        "black" => "#343a40",
        _ => "#6c757d"
    };
}
