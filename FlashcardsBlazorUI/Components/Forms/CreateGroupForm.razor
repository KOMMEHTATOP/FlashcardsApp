@using FlashcardsBlazorUI.Models
@using FlashcardsBlazorUI.Services
@inject ApiService ApiService

<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Создать новую группу</h5>
                <button type="button" class="btn-close" @onclick="OnCancel"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="newGroup" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label class="form-label">Название группы:</label>
                        <InputText @bind-Value="newGroup.Name" class="form-control" placeholder="Введите название группы" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Цвет группы:</label>
                        <InputSelect @bind-Value="newGroup.Color" class="form-select">
                            <option value="">Выберите цвет</option>
                            <option value="0">Черный</option>
                            <option value="1">Красный</option>
                            <option value="2">Зеленый</option>
                            <option value="3">Желтый</option>
                            <option value="4">Оранжевый</option>
                            <option value="5">Фиолетовый</option>
                            <option value="6">Розовый</option>
                        </InputSelect>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Отмена</button>
                        <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span>Создаю...</span>
                            }
                            else
                            {
                                <span>Создать</span>
                            }
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnGroupCreated { get; set; }

    private CreateGroupModel newGroup = new();
    private bool isSubmitting = false;

    private async Task HandleSubmit()
    {
        try
        {
            isSubmitting = true;
            await ApiService.CreateGroupAsync(newGroup);
            await OnGroupCreated.InvokeAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка создания группы: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
        }
    }

    public class CreateGroupModel
    {
        public string Name { get; set; } = "";
        public string Color { get; set; } = "";
    }
}